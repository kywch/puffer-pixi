[project]
channels = ["nvidia", "conda-forge"]
name = "puffer_pixi"
platforms = ["linux-64"]

[activation.env]
CUDA_HOME = "$CONDA_PREFIX"

[dependencies]
python = ">=3.12,<3.13"
pip = "*"
setuptools = "*"
wheel = "*"

# dev-related
git = "*"
ruff = "*"

# pufferlib build deps
cython = "*"
numpy = "<2"

[feature.cu121]
system-requirements = { cuda = "12.1" }
[feature.cu121.dependencies]
cuda-version = "12.1.*"
cuda-toolkit = "==12.1.1"
[feature.cu121.pypi-options]
no-build-isolation = ["pufferlib"]
[feature.cu121.pypi-dependencies]
torch = { index = "https://download.pytorch.org/whl/cu121" }
torchvision = { index = "https://download.pytorch.org/whl/cu121" }
torchaudio = { index = "https://download.pytorch.org/whl/cu121" }
pufferlib = { version = ">=3.0.0" }

# [feature.cu126]
# system-requirements = { cuda = "12.6" }
# [feature.cu126.dependencies]
# cuda-version = "12.6.*"
# cuda-toolkit = "==12.6.3"
# [feature.cu126.pypi-options]
# no-build-isolation = ["pufferlib"]
# [feature.cu126.pypi-dependencies]
# torch = { index = "https://download.pytorch.org/whl/cu126" }
# torchvision = { index = "https://download.pytorch.org/whl/cu126" }
# torchaudio = { index = "https://download.pytorch.org/whl/cu126" }
# pufferlib = { version = ">=3.0.0" }

# [feature.cu129]
# system-requirements = { cuda = "12.9" }
# [feature.cu129.dependencies]
# cuda-version = "12.9.*"
# cuda-toolkit = "==12.9.1"
# [feature.cu129.pypi-options]
# no-build-isolation = ["pufferlib"]
# [feature.cu129.pypi-dependencies]
# torch = { index = "https://download.pytorch.org/whl/cu129" }
# torchvision = { index = "https://download.pytorch.org/whl/cu129" }
# torchaudio = { index = "https://download.pytorch.org/whl/cu129" }
# pufferlib = { version = ">=3.0.0" }

[environments]
# Use the cuda feature that is supported by the host machine.
# Then comment out the other cuda features.
default = ["cu121"]

[pypi-dependencies]
jax = { extras = ["cuda12"] }

[tasks]
test_torch = "python -c 'import torch; print(torch.cuda.is_available())'"
test_jax = "python test_jax.py"
test_puffer = "python -m pufferlib.pufferl train puffer_breakout --vec.num-envs 4"
reset_puffer = "pip uninstall -y pufferlib; pip install pufferlib --no-build-isolation"
puffer = "python -m pufferlib.pufferl"
